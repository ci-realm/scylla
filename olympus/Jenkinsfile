// Import the olympus shared library
@Library('olympus') _

// Configure your showtime api key, which you need to generate/obtain from https://showtime.dc.xing.com/apps
showtime.apiKey = "46282548fddb0cc501b8997c51231acd98add47c9a18c6bcb7585327fb10daa3"

// Configure your namespace.
olympus.namespace = "e-recruiting-api-team"

// Configure a unique name for this project's tag generation.
// See https://olympus.xing.io/user-guide/jenkins/#image-tagging.
olympus.tagGeneratorName = "scylla"

// Configure the image name.
olympus.dockerImage = "quay.dc.xing.com/e-recruiting-api-team/scylla"

// Configure the source repository to prevent pushing images and deployment.
olympus.sourceRepository = "https://source.xing.com/e-recruiting-api-team/scylla.git"

// Specify whether you want your version tags to be pushed back to your git repository.
// This will require you to add the github-script user as a collaborator to your git repo.
olympus.pushVersionTagsToGitRepository = true

def testTag = UUID.randomUUID().toString().replaceAll("-", "")

// Please check whether the default pipeline is appropriate for you.
// See https://source.xing.com/olympus/olenkins#defaultpipeline.
olympusDefaultPipeline(
  this,
  compileAndTestCmd: {
    def noPullImages = olympus.dockerImages.join(",")

    sh "IMAGE=${olympus.dockerImage} TAG=${testTag} ./docker/build.sh"

    // TODO: add tests
    // sh "TAG=${testTag} docker-test --dont-pull ${noPullImages} --main-container main docker/test_compose.yml"
  },
  imageBuildCmd: { image, tag ->
    sh "docker tag ${image}:${testTag} ${image}:${tag}"
    sh "docker tag ${image}:${testTag} ${image}:latest"
    sh "docker push ${image}:latest"
  }
)
